

{
	// Place your snippets for c here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Boiler": {
		"prefix": "log",
		"body": [
			"#include <stdio.h>",
			"", "",
			"int main(){",
			"    $1",
			"",
			"    return 0;",
			"}"
		],
		"description": "Log output to console"
	},
	
	"Boiler_Testcases": {
		"prefix": "logt",
		"body": [
			"#include <stdio.h>",
			"",
			"int main(){",
			"    int t;",
			"    scanf(\"%d\", &t);",
			"    while(t--){",
			"        $1",
			"    }",
			"",
			"    return 0;",
			"}"
		],
		"description": "Log output to console for multiple testcase"
	},
	"Compare": {
		"prefix": "compfn",
		"body": [
			"int compare(const void *a, const void *b) {",
			"    return (*(int*)a - *(int*)b);",
			"}"
		],
		"description": "Log output to console for multiple testcase"
	},
	"input n": {
		"prefix": "inn",
		"body": [
			"int n; scanf(\"%d\", &n);"
		],
		"description": "Take input int n"
	},
	"input array": {
		"prefix": "inarr",
		"body": [
			"int arr[n];",
			"for(int i = 0; i < n; i++){",
			"    scanf(\"%d\", &arr[i]);",
			"}"
		],
		"description": "Input Array"
	}

}
